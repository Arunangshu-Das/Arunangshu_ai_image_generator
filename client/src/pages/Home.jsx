import React,{useState,useEffect} from 'react'
import {Loader,Card,FormField} from '../components';

const RenderCards=({data,title})=>{
  if(data?.length>0)
  {
    return data.map((post)=><Card key={post._id} {...post} />)
  }

  return (
    <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>
      {title}
    </h2>
  )
}



const Home = () => {

  const [loading,setLoading]=useState(false);
  const [post,setPost]=useState(null);
  const [searchText,setSearchText]=useState('');
  const [searchTimeOut,setSearchTimeOut]=useState(null);
  const [searchedResults,setSearchedResults]=useState(null);

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch('http://localhost:8000/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const result = await response.json();
        setPost(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(()=>{
    fetchPosts();
  },[])


    const handleSearchText=(e)=>{
      clearTimeout(searchTimeOut)
      setSearchText(e.target.value)
      setSearchTimeOut(
        setTimeout(()=>{
          const searchResult=post.filter((item)=>item.name.toLowerCase().includes(searchText.toLowerCase())||
          item.prompt.toLowerCase().includes(searchText.toLowerCase()))
          setSearchedResults(searchResult);
        },500)
      );
    }
  
  
  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          All Showcase
        </h1>
        <p className='mt-2 text-[#666e75] text-[14px] max-w-[900px]'>Browse through a collection of imaginative and visually stunning images generated by Arunangshu Image Generator</p>
      </div>

      <div className='mt-16'>
        <FormField
          lableName="Search posts"
          type='text'
          name='text'
          placeholder='Search Post'
          value={searchText}
          handleChange={handleSearchText}
        />
      </div>

      <div className='mt-14'>
        {
          loading ?
          (
            <div className='flex justify-center items-center'> 
              <Loader />
            </div>
          ) :
          (
            <>
              {
                searchText &&
                (
                  <h2 className='font-medium text-[#666e75] text-xl mb-3'> 
                    Showing results for <span className='text-[#222328]'> {searchText} </span>
                  </h2>
                )
              }
              <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'> 
                {
                searchText?(
                  <RenderCards data={searchedResults} title='No search results found' />
                ):
                (
                  <RenderCards data={post} title="No Posts Found"/>
                )
              }
              </div>
            </>
          )
        }
      </div>

    </section>
  )
}

export default Home